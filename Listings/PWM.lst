C51 COMPILER V9.60.0.0   PWM                                                               09/10/2021 23:38:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Objects\PWM.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Library\StdDriver\src\PWM.c LARGE ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE 
                    -INCDIR(.\Library\Device\Include;.\Library\StdDriver\inc) DEBUG OBJECTEXTEND PRINT(.\Listings\PWM.lst) TABS(2) OBJECT(.\O
                    -bjects\PWM.obj)

line level    source

   1          #include "MS51_32K.h"
   2          #include "definations.h"
   3          #include "PWM.h"
   4          // must define the periode register value in globle variable Periode_Reg_Value
   5          
   6          unsigned int Initialise_PWM(unsigned int PWM_Freq)
   7          { 
   8   1        long temp;
   9   1        long PWM_Freq_KHZ;
  10   1        unsigned int Period_Reg;
  11   1        ALL_PWM_CLOCK_FSYS;
  12   1        PWM0_EDGE_TYPE;
  13   1        PWM0_IMDEPENDENT_MODE;
  14   1        PWM0_CLOCK_DIV_1;
  15   1        set_PWM0CON0_CLRPWM;
  16   1        PWM_Freq_KHZ = 1000*((long)PWM_Freq);
  17   1        temp = (SYS_FREQ/PWM_Freq_KHZ);
  18   1        Period_Reg = (unsigned int)temp;
  19   1        SFRS = 0;
  20   1        PWM0PH = HIBYTE(Period_Reg);
  21   1        PWM0PL = LOBYTE(Period_Reg);
  22   1        //set_PWMRUN;
  23   1        set_PWM0CON0_LOAD;
  24   1        //while(LOAD);
  25   1        return Period_Reg;
  26   1      }
  27          
  28          unsigned int Initialise_PWM1(unsigned int PWM_Freq)
  29          {
  30   1        long temp;
  31   1        long PWM_Freq_KHZ;
  32   1        unsigned int Period_Reg;
  33   1        PWM1_EDGE_TYPE;
  34   1        PWM1_IMDEPENDENT_MODE;
  35   1        PWM1_CLOCK_DIV_1;
  36   1        set_PWM1CON0_CLRPWM;
  37   1        PWM_Freq_KHZ = 1000*((long)PWM_Freq);
  38   1        temp = (SYS_FREQ/PWM_Freq_KHZ);
  39   1        Period_Reg = (unsigned int)temp;
  40   1        SFRS = 2;
  41   1        PWM0PH = HIBYTE(Period_Reg);
  42   1        PWM0PL = LOBYTE(Period_Reg);
  43   1        set_PWM1CON0_LOAD;
  44   1        return Period_Reg;
  45   1      }
  46          
  47          void PWM1_Enable(char Channel,char Duty_Cycle,unsigned int Periode_Reg_Value)
  48          {
  49   1        unsigned int Set_Duty_Cycle = 0;
  50   1        float Temp;
  51   1        DISABLE_GLOBAL_INTERRUPT;
  52   1        Temp = ((float)Periode_Reg_Value * ((float)Duty_Cycle/100));
  53   1        Set_Duty_Cycle = ((unsigned int)Temp);
C51 COMPILER V9.60.0.0   PWM                                                               09/10/2021 23:38:49 PAGE 2   

  54   1        switch(Channel)
  55   1        {
  56   2          case 1:
  57   2          P23_PUSHPULL_MODE;
  58   2          ENABLE_PWM1_CH0_P23_OUTPUT;
  59   2          SFRS = 2;
  60   2          PWM1C0H = HIBYTE(Set_Duty_Cycle);     
  61   2          PWM1C0L = LOBYTE(Set_Duty_Cycle);
  62   2          case 2:
  63   2          P22_PUSHPULL_MODE;
  64   2          ENABLE_PWM1_CH1_P22_OUTPUT;
  65   2          SFRS = 2;
  66   2          PWM1C0H = HIBYTE(Set_Duty_Cycle);     
  67   2          PWM1C0L = LOBYTE(Set_Duty_Cycle);
  68   2        }
  69   1        
  70   1        set_PWM1CON0_LOAD ;
  71   1        set_PWM1CON0_PWMRUN;
  72   1        SFRS=0;
  73   1        set_PWM0CON0_PWM1RUN;
  74   1        ENABLE_GLOBAL_INTERRUPT;
  75   1      }
  76          
  77          void PWM1_Enable_int(char Channel,char Duty_Cycle,unsigned int Periode_Reg_Value)
  78          {
  79   1        unsigned int Set_Duty_Cycle = 0;
  80   1        float Temp;
  81   1        DISABLE_GLOBAL_INTERRUPT;
  82   1        Temp = ((float)Periode_Reg_Value * ((float)Duty_Cycle/100));
  83   1        Set_Duty_Cycle = ((unsigned int)Temp);
  84   1        switch(Channel)
  85   1        {
  86   2          case 1:
  87   2          P23_PUSHPULL_MODE;
  88   2          ENABLE_PWM1_CH0_P23_OUTPUT;
  89   2          SFRS = 2;
  90   2          PWM1C0H = HIBYTE(Set_Duty_Cycle);     
  91   2          PWM1C0L = LOBYTE(Set_Duty_Cycle);
  92   2          case 2:
  93   2          P22_PUSHPULL_MODE;
  94   2          ENABLE_PWM1_CH1_P22_OUTPUT;
  95   2          SFRS = 2;
  96   2          PWM1C0H = HIBYTE(Set_Duty_Cycle);     
  97   2          PWM1C0L = LOBYTE(Set_Duty_Cycle);
  98   2        }
  99   1        
 100   1        set_PWM1CON0_LOAD ;
 101   1        set_PWM1CON0_PWMRUN;
 102   1        SFRS=0;
 103   1        set_PWM0CON0_PWM1RUN;
 104   1        ENABLE_GLOBAL_INTERRUPT;
 105   1      }
 106          
 107          
 108          void PWM_Enable(char Channel ,char Duty_Cycle,unsigned int Periode_Reg_Value)
 109          {
 110   1        unsigned int Set_Duty_Cycle = 0;
 111   1        float Temp;
 112   1        DISABLE_GLOBAL_INTERRUPT;
 113   1        Temp = ((float)Periode_Reg_Value * ((float)Duty_Cycle/100));
 114   1        Set_Duty_Cycle = ((unsigned int)Temp);
 115   1        SFRS = 0;
C51 COMPILER V9.60.0.0   PWM                                                               09/10/2021 23:38:49 PAGE 3   

 116   1        switch(Channel)
 117   1        {
 118   2          case 1 :
 119   2            P12_PUSHPULL_MODE;
 120   2            clr_P1_2;
 121   2            ENABLE_PWM0_CH0_P12_OUTPUT;
 122   2            SFRS = 0;
 123   2            PWM0C0H = HIBYTE(Set_Duty_Cycle);     
 124   2            PWM0C0L = LOBYTE(Set_Duty_Cycle);
 125   2            break;
 126   2          case 2 :
 127   2            P14_PUSHPULL_MODE;
 128   2            clr_P1_4;
 129   2            ENABLE_PWM0_CH1_P14_OUTPUT;
 130   2            //ENABLE_PWM0_CH1_P11_OUTPUT;
 131   2            SFRS = 0;
 132   2            PWM0C1H = HIBYTE(Set_Duty_Cycle);     
 133   2            PWM0C1L = LOBYTE(Set_Duty_Cycle);
 134   2            break;
 135   2        /*  case 3 :
 136   2            P10_PUSHPULL_MODE;
 137   2            clr_P1_0;
 138   2            ENABLE_PWM0_CH2_P10_OUTPUT;
 139   2            PWM0C2H = HIBYTE(Set_Duty_Cycle);     
 140   2            PWM0C2L = LOBYTE(Set_Duty_Cycle);
 141   2            break;
 142   2          case 4 :
 143   2            P00_PUSHPULL_MODE;
 144   2            clr_P0_0;
 145   2            ENABLE_PWM0_CH3_P00_OUTPUT;
 146   2            PWM0C3H = HIBYTE(Set_Duty_Cycle);     
 147   2            PWM0C3L = LOBYTE(Set_Duty_Cycle);
 148   2            break;
 149   2          case 5 :
 150   2            P01_PUSHPULL_MODE;
 151   2            clr_P0_1;
 152   2            ENABLE_PWM0_CH4_P01_OUTPUT;
 153   2            PWM0C4H = HIBYTE(Set_Duty_Cycle);     
 154   2            PWM0C4L = LOBYTE(Set_Duty_Cycle);
 155   2            break;
 156   2          case 6 :
 157   2            P03_PUSHPULL_MODE;
 158   2            clr_P0_3;
 159   2            ENABLE_PWM0_CH5_P03_OUTPUT;
 160   2            PWM0C5H = HIBYTE(Set_Duty_Cycle);     
 161   2            PWM0C5L = LOBYTE(Set_Duty_Cycle);
 162   2            break;
 163   2        /*  default:
 164   2            ALL_PWM_OUTPUT_ENABLE;
 165   2            PWM0H = HIBYTE(Set_Duty_Cycle);     
 166   2            PWM0L = LOBYTE(Set_Duty_Cycle);
 167   2            PWM1H = HIBYTE(Set_Duty_Cycle);     
 168   2            PWM1L = LOBYTE(Set_Duty_Cycle);
 169   2            PWM2H = HIBYTE(Set_Duty_Cycle);     
 170   2            PWM2L = LOBYTE(Set_Duty_Cycle);
 171   2            PWM3H = HIBYTE(Set_Duty_Cycle);     
 172   2            PWM3L = LOBYTE(Set_Duty_Cycle);
 173   2            PWM4H = HIBYTE(Set_Duty_Cycle);     
 174   2            PWM4L = LOBYTE(Set_Duty_Cycle);
 175   2            PWM5H = HIBYTE(Set_Duty_Cycle);     
 176   2            PWM5L = LOBYTE(Set_Duty_Cycle);
 177   2        */
C51 COMPILER V9.60.0.0   PWM                                                               09/10/2021 23:38:49 PAGE 4   

 178   2        }
 179   1        set_PWM0CON0_LOAD;
 180   1        set_PWM0CON0_PWM0RUN;
 181   1        ENABLE_GLOBAL_INTERRUPT;
 182   1        //while(LOAD);
 183   1      }
 184          
 185          void PWM_Enable_int(char Channel ,char Duty_Cycle,unsigned int Periode_Reg_Value)
 186          {
 187   1        unsigned int Set_Duty_Cycle = 0;
 188   1        float Temp;
 189   1        Temp = ((float)Periode_Reg_Value * ((float)Duty_Cycle/100));
 190   1        Set_Duty_Cycle = ((unsigned int)Temp);
 191   1        SFRS = 0;
 192   1        switch(Channel)
 193   1        {
 194   2          case 1 :
 195   2            P12_PUSHPULL_MODE;
 196   2            clr_P1_2;
 197   2            ENABLE_PWM0_CH0_P12_OUTPUT;
 198   2            SFRS = 0;
 199   2            PWM0C0H = HIBYTE(Set_Duty_Cycle);     
 200   2            PWM0C0L = LOBYTE(Set_Duty_Cycle);
 201   2            break;
 202   2          case 2 :
 203   2            P11_PUSHPULL_MODE;
 204   2            clr_P1_1;
 205   2            ENABLE_PWM0_CH1_P11_OUTPUT;
 206   2            SFRS = 0;
 207   2            PWM0C1H = HIBYTE(Set_Duty_Cycle);     
 208   2            PWM0C1L = LOBYTE(Set_Duty_Cycle);
 209   2            break;
 210   2        /*  case 3 :
 211   2            P10_PUSHPULL_MODE;
 212   2            clr_P1_0;
 213   2            ENABLE_PWM0_CH2_P10_OUTPUT;
 214   2            PWM0C2H = HIBYTE(Set_Duty_Cycle);     
 215   2            PWM0C2L = LOBYTE(Set_Duty_Cycle);
 216   2            break;
 217   2          case 4 :
 218   2            P00_PUSHPULL_MODE;
 219   2            clr_P0_0;
 220   2            ENABLE_PWM0_CH3_P00_OUTPUT;
 221   2            PWM0C3H = HIBYTE(Set_Duty_Cycle);     
 222   2            PWM0C3L = LOBYTE(Set_Duty_Cycle);
 223   2            break;
 224   2          case 5 :
 225   2            P01_PUSHPULL_MODE;
 226   2            clr_P0_1;
 227   2            ENABLE_PWM0_CH4_P01_OUTPUT;
 228   2            PWM0C4H = HIBYTE(Set_Duty_Cycle);     
 229   2            PWM0C4L = LOBYTE(Set_Duty_Cycle);
 230   2            break;
 231   2          case 6 :
 232   2            P03_PUSHPULL_MODE;
 233   2            clr_P0_3;
 234   2            ENABLE_PWM0_CH5_P03_OUTPUT;
 235   2            PWM0C5H = HIBYTE(Set_Duty_Cycle);     
 236   2            PWM0C5L = LOBYTE(Set_Duty_Cycle);
 237   2            break;
 238   2        /*  default:
 239   2            ALL_PWM_OUTPUT_ENABLE;
C51 COMPILER V9.60.0.0   PWM                                                               09/10/2021 23:38:49 PAGE 5   

 240   2            PWM0H = HIBYTE(Set_Duty_Cycle);     
 241   2            PWM0L = LOBYTE(Set_Duty_Cycle);
 242   2            PWM1H = HIBYTE(Set_Duty_Cycle);     
 243   2            PWM1L = LOBYTE(Set_Duty_Cycle);
 244   2            PWM2H = HIBYTE(Set_Duty_Cycle);     
 245   2            PWM2L = LOBYTE(Set_Duty_Cycle);
 246   2            PWM3H = HIBYTE(Set_Duty_Cycle);     
 247   2            PWM3L = LOBYTE(Set_Duty_Cycle);
 248   2            PWM4H = HIBYTE(Set_Duty_Cycle);     
 249   2            PWM4L = LOBYTE(Set_Duty_Cycle);
 250   2            PWM5H = HIBYTE(Set_Duty_Cycle);     
 251   2            PWM5L = LOBYTE(Set_Duty_Cycle);
 252   2        */
 253   2        }
 254   1        set_PWM0CON0_LOAD;
 255   1        set_PWM0CON0_PWM0RUN;
 256   1        //while(LOAD);
 257   1      }
 258          
 259          void PWM_Disable(char channel)
 260          {
 261   1        DISABLE_GLOBAL_INTERRUPT;
 262   1        switch(channel)
 263   1        {
 264   2          case 1 :
 265   2            DISABLE_PWM0_CH0_P12_OUTPUT;
 266   2            clr_P1_2;
 267   2            break;
 268   2          case 2 :
 269   2            DISABLE_PWM0_CH1_P14_OUTPUT;
 270   2            clr_P1_4;
 271   2            break;
 272   2          case 3 :
 273   2            DISABLE_PWM0_CH2_P10_OUTPUT;
 274   2            clr_P1_0;
 275   2            break;
 276   2          case 4 :
 277   2            DISABLE_PWM0_CH3_P00_OUTPUT;
 278   2            clr_P0_0;
 279   2            break;
 280   2          case 5 :
 281   2            DISABLE_PWM0_CH4_P01_OUTPUT;
 282   2            clr_P0_1;
 283   2            break;
 284   2          case 6 :
 285   2            DISABLE_PWM0_CH5_P03_OUTPUT;
 286   2            clr_P0_3;
 287   2            break;
 288   2          default:
 289   2            DISABLE_ALL_PWM0_OUTPUT;
 290   2        }
 291   1        ENABLE_GLOBAL_INTERRUPT;
 292   1      }
 293          
 294          
 295          void PWM_Disable_int(char channel)
 296          {
 297   1        switch(channel)
 298   1        {
 299   2          case 1 :
 300   2            DISABLE_PWM0_CH0_P12_OUTPUT;
 301   2            clr_P1_2;
C51 COMPILER V9.60.0.0   PWM                                                               09/10/2021 23:38:49 PAGE 6   

 302   2            break;
 303   2          case 2 :
 304   2            DISABLE_PWM0_CH1_P11_OUTPUT;
 305   2            clr_P1_1;
 306   2            break;
 307   2          case 3 :
 308   2            DISABLE_PWM0_CH2_P10_OUTPUT;
 309   2            clr_P1_0;
 310   2            break;
 311   2          case 4 :
 312   2            DISABLE_PWM0_CH3_P00_OUTPUT;
 313   2            clr_P0_0;
 314   2            break;
 315   2          case 5 :
 316   2            DISABLE_PWM0_CH4_P01_OUTPUT;
 317   2            clr_P0_1;
 318   2            break;
 319   2          case 6 :
 320   2            DISABLE_PWM0_CH5_P03_OUTPUT;
 321   2            clr_P0_3;
 322   2            break;
 323   2          default:
 324   2            DISABLE_ALL_PWM0_OUTPUT;
 325   2        }
 326   1      }
 327          
 328          void PWM1_Disable(char channel)
 329          {
 330   1        switch(channel)
 331   1        {
 332   2          case 1:
 333   2          DISABLE_PWM1_CH0_P23_OUTPUT;
 334   2          clr_P2_3;
 335   2          break;
 336   2          case 2:
 337   2          DISABLE_PWM1_CH1_P22_OUTPUT;
 338   2          clr_P2_2;
 339   2          break;
 340   2        }
 341   1      }
 342          
 343          
 344          void PWM1_Disable_int(char channel)
 345          {
 346   1        switch(channel)
 347   1        {
 348   2          case 1:
 349   2          DISABLE_PWM1_CH0_P23_OUTPUT;
 350   2          clr_P2_3;
 351   2          break;
 352   2          case 2:
 353   2          DISABLE_PWM1_CH1_P22_OUTPUT;
 354   2          clr_P2_2;
 355   2          break;
 356   2        }
 357   1      }
 358          
 359          long map_1(long x, long in_min, long in_max, long out_min, long out_max) {
 360   1        return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 361   1      }
 362          
 363          int map(int x, int in_min, int in_max, int out_min, int out_max) 
C51 COMPILER V9.60.0.0   PWM                                                               09/10/2021 23:38:49 PAGE 7   

 364          {
 365   1        int new_range;
 366   1        int old_range;
 367   1        float new_value;
 368   1        
 369   1        new_range = (out_max - out_min);
 370   1        old_range = (in_max - in_min);
 371   1        new_value = ((((float)x -in_min) * (float)new_range)/(float)old_range) + out_min;
 372   1        return (int)new_value;
 373   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1548    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      46
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
