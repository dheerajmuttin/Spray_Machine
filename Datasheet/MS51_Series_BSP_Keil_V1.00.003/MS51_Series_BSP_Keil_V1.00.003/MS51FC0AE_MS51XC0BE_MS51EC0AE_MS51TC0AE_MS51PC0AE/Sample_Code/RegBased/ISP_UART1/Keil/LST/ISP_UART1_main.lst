C51 COMPILER V9.52.0.0   ISP_UART1_MAIN                                                    11/20/2019 13:49:24 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ISP_UART1_MAIN
OBJECT MODULE PLACED IN .\Output\ISP_UART1_main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\ISP_UART1_main.c OPTIMIZE(7,SPEED) BROWSE INCDIR(..\..\..\..\Library\Dev
                    -ice\Include;..\..\..\..\Library\StdDriver\inc) DEBUG OBJECTEXTEND PRINT(.\LST\ISP_UART1_main.lst) TABS(2) OBJECT(.\Outpu
                    -t\ISP_UART1_main.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2019 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          
   8          //********************************************************************************************************
             -***
   9          //  File Function: ML51 UART0 ISP demo code
  10          //********************************************************************************************************
             -***
  11          #include "MS51_32K.H"
  12          #include "isp_uart1.h"
  13          /*********************************************************************************************************
             -***
  14          *    Main function 
  15          **********************************************************************************************************
             -**/
  16          void main (void)
  17          {
  18   1      
  19   1        set_CHPCON_IAPEN;
  20   1        MODIFY_HIRC_24();
  21   1      /*uart initial for ISP programmer GUI, always use 115200 baudrate*/
  22   1        UART1_ini_115200_24MHz();
  23   1        TM0_ini();
  24   1      
  25   1        g_timer0Over=0;
  26   1        g_timer0Counter=5000;
  27   1        g_progarmflag=0;
  28   1      
  29   1      while(1)
  30   1      {
  31   2              if(bUartDataReady == TRUE)
  32   2              {
  33   3                EA=0; //DISABLE ALL INTERRUPT                  
  34   3                if(g_progarmflag==1)
  35   3                {
  36   4                  for(count=8;count<64;count++)
  37   4                  {
  38   5                    IAPCN = BYTE_PROGRAM_AP;          //program byte
  39   5                    IAPAL = flash_address&0xff;
  40   5                    IAPAH = (flash_address>>8)&0xff;
  41   5                    IAPFD=uart_rcvbuf[count];
  42   5                    set_IAPTRG_IAPGO;
  43   5                
  44   5                    IAPCN = BYTE_READ_AP;              //program byte verify
C51 COMPILER V9.52.0.0   ISP_UART1_MAIN                                                    11/20/2019 13:49:24 PAGE 2   

  45   5                    set_IAPTRG_IAPGO;
  46   5                    if(IAPFD!=uart_rcvbuf[count])
  47   5                    while(1);                          
  48   5                    if (CHPCON==0x43)              //if error flag set, program error stop ISP
  49   5                    while(1);
  50   5                    
  51   5                    g_totalchecksum=g_totalchecksum+uart_rcvbuf[count];
  52   5                    flash_address++;
  53   5        
  54   5                    if(flash_address==AP_size)
  55   5                    {
  56   6                      g_progarmflag=0;
  57   6                       goto END_2;          
  58   6                    }
  59   5                  } 
  60   4      END_2:                
  61   4                  Package_checksum();
  62   4                  uart_txbuf[8]=g_totalchecksum&0xff;
  63   4                  uart_txbuf[9]=(g_totalchecksum>>8)&0xff;
  64   4                  Send_64byte_To_UART1();
  65   4                  
  66   4                }
  67   3                  
  68   3                switch(uart_rcvbuf[0])
  69   3                {                
  70   4                  case CMD_CONNECT:
  71   4                  case CMD_SYNC_PACKNO:
  72   4                  {
  73   5                    Package_checksum();
  74   5                    Send_64byte_To_UART1();    
  75   5                    g_timer0Counter=0; //clear timer 0 for no reset
  76   5                    g_timer0Over=0;
  77   5                  break;
  78   5                  }
  79   4                              
  80   4                  case CMD_GET_FWVER:            
  81   4                  {
  82   5                    Package_checksum();
  83   5                    uart_txbuf[8]=FW_VERSION;  
  84   5                    Send_64byte_To_UART1();  
  85   5                  break;
  86   5                  }
  87   4                  
  88   4                  case CMD_RUN_APROM:            
  89   4                  {
  90   5                    goto _APROM;
  91   5                  break;
  92   5                  }
  93   4          
  94   4                  //please for ISP programmer GUI, ID always use following rule to transmit.
  95   4                  case CMD_GET_DEVICEID:            
  96   4                  {
  97   5                    READ_ID();
  98   5                    Package_checksum();
  99   5                    uart_txbuf[8]=DID_lowB;  
 100   5                    uart_txbuf[9]=DID_highB;  
 101   5                    uart_txbuf[10]=PID_lowB;  
 102   5                    uart_txbuf[11]=PID_highB;  
 103   5                    Send_64byte_To_UART1();  
 104   5                  break;
 105   5                  }
 106   4                  case CMD_ERASE_ALL:
C51 COMPILER V9.52.0.0   ISP_UART1_MAIN                                                    11/20/2019 13:49:24 PAGE 3   

 107   4                  {
 108   5      //              set_CHPCON_IAPEN;
 109   5                    set_IAPUEN_APUEN;
 110   5                    IAPFD = 0xFF;          //Erase must set IAPFD = 0xFF
 111   5                    IAPCN = PAGE_ERASE_AP;
 112   5                    
 113   5                    for(flash_address=0x0000;flash_address<APROM_SIZE/PAGE_SIZE;flash_address++)
 114   5                    {        
 115   6                      IAPAL = LOBYTE(flash_address*PAGE_SIZE);
 116   6                      IAPAH = HIBYTE(flash_address*PAGE_SIZE);
 117   6                      set_IAPTRG_IAPGO;
 118   6                    }            
 119   5                    
 120   5                    Package_checksum();
 121   5                    Send_64byte_To_UART1();  
 122   5                    break;
 123   5                  }
 124   4                  case CMD_READ_CONFIG:            
 125   4                  {
 126   5                    READ_CONFIG();
 127   5                    Package_checksum();
 128   5                    uart_txbuf[8]=CONF0;  
 129   5                    uart_txbuf[9]=CONF1;  
 130   5                    uart_txbuf[10]=CONF2;  
 131   5                    uart_txbuf[11]=0xff;  
 132   5                    uart_txbuf[12]=CONF4;  
 133   5                    uart_txbuf[13]=0xff;  
 134   5                    uart_txbuf[14]=0xff;            
 135   5                    uart_txbuf[15]=0xff;
 136   5                    Send_64byte_To_UART1();  
 137   5                  break;
 138   5                  }
 139   4                  
 140   4                  case CMD_UPDATE_CONFIG:
 141   4                  {
 142   5                    recv_CONF0 = uart_rcvbuf[8];
 143   5                    recv_CONF1 = uart_rcvbuf[9];
 144   5                    recv_CONF2 = uart_rcvbuf[10];
 145   5                    recv_CONF4 = uart_rcvbuf[12];
 146   5      /*Erase CONFIG */              
 147   5      //              set_CHPCON_IAPEN;
 148   5                    set_IAPUEN_CFUEN;
 149   5                    IAPCN = PAGE_ERASE_CONFIG;
 150   5                    IAPAL = 0x00;
 151   5                    IAPAH = 0x00;
 152   5                    IAPFD = 0xFF;
 153   5                    set_IAPTRG_IAPGO;
 154   5      /*Program CONFIG*/  
 155   5                    IAPCN = BYTE_PROGRAM_CONFIG;
 156   5                    IAPAL = 0x00;
 157   5                    IAPAH = 0x00;
 158   5                    IAPFD = recv_CONF0;
 159   5                    set_IAPTRG_IAPGO;
 160   5                    IAPFD = recv_CONF1;
 161   5                    IAPAL = 0x01;
 162   5                    set_IAPTRG_IAPGO;
 163   5                    IAPAL = 0x02;
 164   5                    IAPFD = recv_CONF2;
 165   5                    set_IAPTRG_IAPGO;
 166   5                    IAPAL = 0x04;
 167   5                    IAPFD = recv_CONF4;
 168   5                    set_IAPTRG_IAPGO;
C51 COMPILER V9.52.0.0   ISP_UART1_MAIN                                                    11/20/2019 13:49:24 PAGE 4   

 169   5                    clr_IAPUEN_CFUEN;
 170   5      /*Read new CONFIG*/  
 171   5                    READ_CONFIG();
 172   5                    
 173   5                    Package_checksum();
 174   5                    uart_txbuf[8]=CONF0;  
 175   5                    uart_txbuf[9]=CONF1;  
 176   5                    uart_txbuf[10]=CONF2;  
 177   5                    uart_txbuf[11]=0xff;  
 178   5                    uart_txbuf[12]=CONF4;  
 179   5                    uart_txbuf[13]=0xff;  
 180   5                    uart_txbuf[14]=0xff;            
 181   5                    uart_txbuf[15]=0xff;
 182   5                    Send_64byte_To_UART1();  
 183   5                    break;
 184   5                  }
 185   4                  
 186   4                  case CMD_UPDATE_APROM:            
 187   4                  {
 188   5      //              set_CHPCON_IAPEN;
 189   5                    set_IAPUEN_APUEN;
 190   5                    IAPFD = 0xFF;          //Erase must set IAPFD = 0xFF
 191   5                    IAPCN = PAGE_ERASE_AP;
 192   5                    
 193   5                    for(flash_address=0x0000;flash_address<APROM_SIZE/PAGE_SIZE;flash_address++)
 194   5                    {        
 195   6                      IAPAL = LOBYTE(flash_address*PAGE_SIZE);
 196   6                      IAPAH = HIBYTE(flash_address*PAGE_SIZE);
 197   6                      set_IAPTRG_IAPGO;
 198   6                    }            
 199   5                    
 200   5                    g_totalchecksum=0;
 201   5                    flash_address=0;
 202   5                    AP_size=0;
 203   5                    AP_size=uart_rcvbuf[12];
 204   5                    AP_size|=(uart_rcvbuf[13]<<8);  
 205   5                    g_progarmflag=1;
 206   5      
 207   5                    for(count=16;count<64;count++)
 208   5                    {
 209   6                      IAPCN = BYTE_PROGRAM_AP;
 210   6                      IAPAL = flash_address&0xff;
 211   6                      IAPAH = (flash_address>>8)&0xff;
 212   6                      IAPFD=uart_rcvbuf[count];
 213   6                      set_IAPTRG_IAPGO;                              
 214   6            
 215   6                      IAPCN = BYTE_READ_AP;                //program byte verify
 216   6                      set_IAPTRG_IAPGO;                          
 217   6                      if(IAPFD!=uart_rcvbuf[count])
 218   6                      while(1);          
 219   6                      if (CHPCON==0x43)                //if error flag set, program error stop ISP
 220   6                      while(1);
 221   6                      
 222   6                      g_totalchecksum=g_totalchecksum+uart_rcvbuf[count];
 223   6                      flash_address++;
 224   6                      
 225   6                      if(flash_address==AP_size)
 226   6                      {
 227   7                        g_progarmflag=0;
 228   7                         goto END_1;          
 229   7                      }
 230   6                    }
C51 COMPILER V9.52.0.0   ISP_UART1_MAIN                                                    11/20/2019 13:49:24 PAGE 5   

 231   5      END_1:                
 232   5                    Package_checksum();
 233   5                    uart_txbuf[8]=g_totalchecksum&0xff;
 234   5                    uart_txbuf[9]=(g_totalchecksum>>8)&0xff;
 235   5                    Send_64byte_To_UART1();  
 236   5                    break;
 237   5                  }
 238   4                }  
 239   3                bUartDataReady = FALSE;
 240   3                bufhead = 0;            
 241   3                EA=1;
 242   3            }
 243   2            //For connect timer out  
 244   2            if(g_timer0Over==1)
 245   2            {       
 246   3             goto _APROM;
 247   3            }
 248   2            
 249   2            //for uart time out or buffer error
 250   2             if(g_timer1Over==1)
 251   2            {       
 252   3             if((bufhead<64)&&(bufhead>0)||(bufhead>64))
 253   3               {
 254   4               bufhead=0;         
 255   4               }
 256   3            }  
 257   2      
 258   2      }   
 259   1      
 260   1      _APROM:
 261   1          MODIFY_HIRC_16();
 262   1          clr_CHPCON_IAPEN;
 263   1          TA = 0xAA;
 264   1          TA = 0x55;
 265   1          CHPCON &= 0xFD;                  //set boot from AP
 266   1          TA = 0xAA;
 267   1          TA = 0x55;
 268   1          CHPCON |= 0x80;                   //software reset enable
 269   1      
 270   1          /* Trap the CPU */
 271   1          while(1);  
 272   1      }
 273          
 274          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1171    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
