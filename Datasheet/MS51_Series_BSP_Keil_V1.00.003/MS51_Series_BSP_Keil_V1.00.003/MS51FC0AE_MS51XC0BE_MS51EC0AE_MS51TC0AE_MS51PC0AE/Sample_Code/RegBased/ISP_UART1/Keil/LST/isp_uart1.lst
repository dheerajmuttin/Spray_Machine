C51 COMPILER V9.52.0.0   ISP_UART1                                                         11/20/2019 13:49:24 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ISP_UART1
OBJECT MODULE PLACED IN .\Output\isp_uart1.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\isp_uart1.c OPTIMIZE(7,SPEED) BROWSE INCDIR(..\..\..\..\Library\Device\I
                    -nclude;..\..\..\..\Library\StdDriver\inc) DEBUG OBJECTEXTEND PRINT(.\LST\isp_uart1.lst) TABS(2) OBJECT(.\Output\isp_uart
                    -1.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2019 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  File Function: ML51 UART0 ISP subroutine
   9          //********************************************************************************************************
             -***
  10          #include "MS51_32K.H"
  11          #include "isp_uart1.h"
  12          
  13          xdata volatile uint8_t uart_rcvbuf[64];
  14          xdata volatile uint8_t uart_txbuf[64];
  15          data volatile uint8_t bufhead;
  16          data volatile uint16_t flash_address;
  17          data volatile uint16_t AP_size;
  18          data volatile uint8_t g_timer1Counter;
  19          data volatile uint8_t count;
  20          data volatile uint16_t g_timer0Counter;
  21          data volatile uint32_t g_checksum;
  22          data volatile uint32_t g_totalchecksum;
  23          bit volatile bUartDataReady;
  24          bit volatile g_timer0Over;
  25          bit volatile g_timer1Over;
  26          bit volatile g_progarmflag;
  27          bit  BIT_TMP;
  28          unsigned char PID_highB, PID_lowB, DID_highB, DID_lowB, CONF0, CONF1, CONF2, CONF4;
  29          unsigned char recv_CONF0, recv_CONF1, recv_CONF2, recv_CONF4;
  30          
  31          
  32          void MODIFY_HIRC_24(void)
  33          {
  34   1          unsigned char data hircmap0, hircmap1;
  35   1          /* Check if power on reset, modify HIRC */
  36   1      //    set_CHPCON_IAPEN;
  37   1          IAPAL = 0x38;
  38   1          IAPAH = 0x00;
  39   1          IAPCN = READ_UID;
  40   1          set_IAPTRG_IAPGO;
  41   1          hircmap0 = IAPFD;
  42   1          IAPAL = 0x39;
  43   1          IAPAH = 0x00;
  44   1          set_IAPTRG_IAPGO;
  45   1          hircmap1 = IAPFD;
  46   1      
C51 COMPILER V9.52.0.0   ISP_UART1                                                         11/20/2019 13:49:24 PAGE 2   

  47   1          TA = 0XAA;
  48   1          TA = 0X55;
  49   1          RCTRIM0 = hircmap0;
  50   1          TA = 0XAA;
  51   1          TA = 0X55;
  52   1          RCTRIM1 = hircmap1;
  53   1      //    clr_CHPCON_IAPEN;
  54   1      
  55   1      
  56   1      }
  57          
  58          void MODIFY_HIRC_16(void)
  59          {
  60   1          unsigned char data hircmap0, hircmap1;
  61   1      //    set_CHPCON_IAPEN;
  62   1          IAPAL = 0x30;
  63   1          IAPAH = 0x00;
  64   1          IAPCN = READ_UID;
  65   1          set_IAPTRG_IAPGO;
  66   1          hircmap0 = IAPFD;
  67   1          IAPAL = 0x31;
  68   1          IAPAH = 0x00;
  69   1          set_IAPTRG_IAPGO;
  70   1          hircmap1 = IAPFD;
  71   1      
  72   1          TA = 0xAA;
  73   1          TA = 0x55;
  74   1          RCTRIM0 = hircmap0;
  75   1          TA = 0xAA;
  76   1          TA = 0x55;
  77   1          RCTRIM1 = hircmap1;
  78   1      }
  79          
  80          void READ_ID(void)
  81          {
  82   1      //    set_CHPCON_IAPEN;
  83   1          IAPCN = READ_DID;
  84   1          IAPAH = 0x00;
  85   1          IAPAL = 0x00;
  86   1          set_IAPTRG_IAPGO;
  87   1          DID_lowB = IAPFD;
  88   1          IAPAL = 0x01;
  89   1          set_IAPTRG_IAPGO;
  90   1          DID_highB = IAPFD;
  91   1          IAPAL = 0x02;
  92   1          set_IAPTRG_IAPGO;
  93   1          PID_lowB = IAPFD;
  94   1          IAPAL = 0x03;
  95   1          set_IAPTRG_IAPGO;
  96   1          PID_highB = IAPFD;
  97   1      }
  98          void READ_CONFIG(void)
  99          {
 100   1          IAPCN = BYTE_READ_CONFIG;
 101   1          IAPAL = 0x00;
 102   1          IAPAH = 0x00;
 103   1          set_IAPTRG_IAPGO;
 104   1          CONF0 = IAPFD;
 105   1          IAPAL = 0x01;
 106   1          set_IAPTRG_IAPGO;
 107   1          CONF1 = IAPFD;
 108   1          IAPAL = 0x02;
C51 COMPILER V9.52.0.0   ISP_UART1                                                         11/20/2019 13:49:24 PAGE 3   

 109   1          set_IAPTRG_IAPGO;
 110   1          CONF2 = IAPFD;
 111   1          IAPAL = 0x04;
 112   1          set_IAPTRG_IAPGO;
 113   1          CONF4 = IAPFD;
 114   1      //    clr_CHPCON_IAPEN;
 115   1      }
 116          
 117          void TM0_ini(void)
 118          {
 119   1          TH0 = TL0 = 0; //interrupt timer 140us
 120   1          set_TCON_TR0;      //Start timer0
 121   1          set_IPH_PSH;       // Serial port 0 interrupt level2
 122   1          set_IE_ET0;
 123   1      }
 124          
 125          
 126          void UART1_ini_115200_24MHz(void)
 127          {
 128   1          P16_QUASI_MODE;
 129   1          P02_INPUT_MODE;
 130   1      
 131   1          SFRS = 0x00;
 132   1          SCON_1 = 0x50;           /*UART1 Mode1,REN_1=1 */
 133   1          T3CON = 0x88;           /*T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1*/
 134   1          clr_T3CON_BRCK;
 135   1          RH3    = HIBYTE(65536 - 13);;
 136   1          RL3    = LOBYTE(65536 - 13);
 137   1          set_T3CON_TR3;             //Trigger Timer3
 138   1          set_EIE1_ES_1;
 139   1          EA = 1;
 140   1      }
 141          
 142          
 143          void Package_checksum(void)
 144          {
 145   1          g_checksum = 0;
 146   1      
 147   1          for (count = 0; count < 64; count++)
 148   1          {
 149   2              g_checksum = g_checksum + uart_rcvbuf[count];
 150   2          }
 151   1      
 152   1          uart_txbuf[0] = g_checksum & 0xff;
 153   1          uart_txbuf[1] = (g_checksum >> 8) & 0xff;
 154   1          uart_txbuf[4] = uart_rcvbuf[4] + 1;
 155   1          uart_txbuf[5] = uart_rcvbuf[5];
 156   1      
 157   1          if (uart_txbuf[4] == 0x00)
 158   1              uart_txbuf[5]++;
 159   1      
 160   1      }
 161          
 162          
 163          void Send_64byte_To_UART1(void)
 164          {
 165   1          SFRS = 0;
 166   1      
 167   1          for (count = 0; count < 64; count++)
 168   1          {
 169   2              TI_1 = 0;
 170   2              SBUF_1 = uart_txbuf[count];
C51 COMPILER V9.52.0.0   ISP_UART1                                                         11/20/2019 13:49:24 PAGE 4   

 171   2      
 172   2              while (TI_1 == 0);
 173   2          }
 174   1      }
 175          
 176          void UART1_ISR(void) interrupt 15
 177          {
 178   1          _push_(SFRS);
 179   1      
 180   1          if (RI_1 == 1)
 181   1          {
 182   2              uart_rcvbuf[bufhead++] =  SBUF_1;
 183   2              clr_SCON_1_RI_1;                                         // Clear RI (Receive Interrupt).
 184   2          }
 185   1      
 186   1          if (TI_1 == 1)
 187   1          {
 188   2              clr_SCON_1_TI_1;                                         // Clear TI (Transmit Interrupt).
 189   2          }
 190   1      
 191   1          if (bufhead == 1)
 192   1          {
 193   2              g_timer1Over = 0;
 194   2              g_timer1Counter = 90; //for check uart timeout using
 195   2          }
 196   1      
 197   1          if (bufhead == 64)
 198   1          {
 199   2              bUartDataReady = TRUE;
 200   2              g_timer1Counter = 0;
 201   2              g_timer1Over = 0;
 202   2              bufhead = 0;
 203   2          }
 204   1          _pop_(SFRS);
 205   1      }
 206          
 207          void Timer0_ISR(void) interrupt 1
 208          {
 209   1          _push_(SFRS);
 210   1          if (g_timer0Counter)
 211   1          {
 212   2              g_timer0Counter--;
 213   2      
 214   2              if (!g_timer0Counter)
 215   2              {
 216   3                  g_timer0Over = 1;
 217   3              }
 218   2          }
 219   1      
 220   1          if (g_timer1Counter)
 221   1          {
 222   2              g_timer1Counter--;
 223   2      
 224   2              if (!g_timer1Counter)
 225   2              {
 226   3                  g_timer1Over = 1;
 227   3              }
 228   2          }
 229   1          _pop_(SFRS);
 230   1      }


C51 COMPILER V9.52.0.0   ISP_UART1                                                         11/20/2019 13:49:24 PAGE 5   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    714    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    128    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     29    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
